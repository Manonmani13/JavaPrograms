 public void reportSnapshot(Long organizationId) {
        Schema.dbName.set(redisStore.getTenantName(organizationId));
        String tableName = gradingCompetenceDAO.getValue("select type from organization_config where config='report_snapshot'");
        String viewName= gradingCompetenceDAO.getValue("select description from organization_config where config='report_snapshot'");
        String testing = gradingCompetenceDAO.getValue("select user_permission from organization_config where config='report_snapshot'");
        List<Map<String, Object>> desc = gradingCompetenceDAO.getMapContent("desc "+tableName);
        List<Map<String, Object>> view = gradingCompetenceDAO.getMapContent(viewName);
        gradingCompetenceDAO.executeQuery("DELETE from " + tableName);

        StringBuffer values = new StringBuffer();
        StringBuffer finalQuery = new StringBuffer();
        String getcolumn,datatype, columnValue;
        for (Map<String, Object> tes2 : view) {
            if (!Objects.equals(tes2, null)) {
                for (Map<String, Object> columnName : desc) {
                    getcolumn = columnName.get("field").toString();
                    datatype = columnName.get("type").toString();
                    boolean isFound = datatype.indexOf("bigint") !=- 1? true: false;
                    if (!Objects.equals(tes2.get(getcolumn), null) && !Objects.equals(tes2.get(getcolumn), "")) {
                        columnValue = tes2.get(getcolumn).toString().contains("'") ? tes2.get(getcolumn).toString().replace("'", "''") : tes2.get(getcolumn).toString();
                    } else {
                        columnValue = null;
                    }
                    if (isFound==false) {
                        values.append("'");
                        values.append(columnValue);
                        values.append("',");
                } else{
                        values.append(columnValue);
                        values.append(",");
                    }
                }
                values.deleteCharAt(values.length() - 1);
                values.append(");");
                finalQuery.append(testing);
                finalQuery.append(values);
                gradingCompetenceDAO.executeQuery(finalQuery.toString());
                values.delete(0,values.length());
                int lastchar = finalQuery.length();
                finalQuery.delete(0, lastchar);
            }
        }
    }
}


-----------------------

http://192.168.2.12/engage2serve/arm/merge_requests/3786
